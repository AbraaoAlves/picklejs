{"version":3,"sources":["../lib/functions.js"],"names":["hex2rgbCSS","hex","red","green","blue","alpha","parseInt","buildClassSelector","selectors","replace","parseNumberEls","el","includes","ordinal","parsed","numbers","match","getSelector","elements","text","singular","showOrdinals","Array","isArray","filter","firstOrdinal","lastParentSelectors","className","reduce","out","elementStr","i","element","pluralize","ELEMENT_SELECTORS","selector","lastParent","Error","default","join","getNormalized","cy","get","last","eq","scroll","direction","windowObj","window","then","win","body","scrollHeight","px","scrollTo","click","parent","first","type","input","randomVariableRegex","randomVariable","randomNumber","Math","round","random","toString","stateVariableRegex","stateVariable","STATE","contains","clear","open","screen","url","SCREENS","visit","waitForResults","wait","dragAbove","el1","el1Parent","el1Contains","el2","el2Parent","el2Contains","$el1","trigger","which","force","el2X","el2Y","$el","x","y","getBoundingClientRect","containerX","containerY","newPosOpts","takeSnapshot","name","matchImageSnapshot","threshold","thresholdType","takeElSnapshot","onPage","should","redirectedTo","nElements","number","elExists","textOnEl","elDoesNotExist","elBackground","background","elBorder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;;AAEO,UAAMA,kCAAcC,GAAD,IAAS;AAC/B,cAAM,EAAEC,GAAF,EAAOC,KAAP,EAAcC,IAAd,EAAoBC,KAApB,KAA8B,sBAAQJ,GAAR,CAApC;;AAEA,eAAQ,OAAMC,GAAI,KAAIC,KAAM,KAAIC,IAAK,GAAEC,QAAQ,GAAR,GAAe,KAAIC,SAASD,QAAQ,GAAjB,IAAwB,GAAI,EAA/C,GAAmD,EAAG,GAA7F;AACH,KAJM;;AAMP;AACO,UAAME,kDAAqBC,aAC9BA,UAAUC,OAAV,CAAkB,gBAAlB,EAAoC,eAApC,CADG;;AAIP;AACO,UAAMC,0CAAiBC,MAAM;AAChC,YAAGA,GAAGC,QAAH,CAAY,MAAZ,CAAH,EAAwB;AACpB,mBAAO;AACHC,yBAAS,MADN;AAEHF,oBAAIA,GAAGF,OAAH,CAAW,OAAX,EAAoB,EAApB;AAFD,aAAP;AAIH,SALD,MAKO;AACH,kBAAMK,SAAS,8BAAeH,EAAf,CAAf;AACA,kBAAMI,UAAUD,OAAOE,KAAP,CAAa,KAAb,CAAhB;;AAEA,gBAAGD,OAAH,EAAY;AACR,uBAAO;AACHJ,wBAAIG,OAAOL,OAAP,CAAeM,QAAQ,CAAR,IAAa,GAA5B,EAAiC,EAAjC,CADD;AAEHF,6BAASP,SAASS,QAAQ,CAAR,CAAT;AAFN,iBAAP;AAIH,aALD,MAKO;AACH,uBAAO;AACHJ,wBAAIG;AADD,iBAAP;AAGH;AACJ;AACJ,KArBM;;AAuBP;AACA;AACO,UAAMG,oCAAc,CAACC,QAAD,EAAW,EAAEC,IAAF,EAAQC,QAAR,EAAkBC,YAAlB,KAAmC,EAA9C,KAAqD;AAC5E,YAAI,CAACC,MAAMC,OAAN,CAAcL,QAAd,CAAL,EAA8B;AAC1BA,uBAAW,CAACA,QAAD,CAAX;AACH;;AAED;AACAA,mBAAWA,SAASM,MAAT,CAAgBb,MAAIA,EAApB,CAAX;;AAEA;AACA;AACA,YAAIc,YAAJ;AACA,YAAIC,mBAAJ;;AAEA,YAAIC,YAAYT,SAASU,MAAT,CAAgB,CAACC,GAAD,EAAMC,UAAN,EAAkBC,CAAlB,KAAwB;AACpD,gBAAIC,OAAJ;AACA;AACAA,sBAAUF,WAAWrB,OAAX,CAAmB,KAAnB,EAA0B,EAA1B,CAAV;;AAEA,gBAAGW,QAAH,EAAa;AACT;AACAY,0BAAUC,oBAAUb,QAAV,CAAmBY,OAAnB,CAAV;AACH;;AAED,kBAAM;AACFnB,uBADE;AAEFF;AAFE,gBAGFD,eAAesB,OAAf,CAHJ;;AAKA,gBAAI,CAACP,YAAD,IAAiBZ,OAArB,EAA8B;AAC1BY,+BAAeZ,OAAf;AACH;;AAED,gBAAIL,YAAY0B,4BAAhB;;AAEA;AACA,gBAAIL,IAAIE,IAAI,CAAR,CAAJ,EAAgB;AACZvB,4BAAYkB,mBAAZ;AACH;;AAED,kBAAMS,WAAW3B,UAAUG,EAAV,CAAjB;;AAEA,gBAAI,CAACwB,QAAL,EAAe;AACX,sBAAMC,aAAalB,SAASa,IAAI,CAAb,IACbb,SAASa,IAAI,CAAb,IAAkB,GADL,GAEb,EAFN;AAGA,sBAAM,IAAIM,KAAJ,CAAW,qCAAoCD,UAAW,GAAEzB,EAAG,EAA/D,CAAN;AACH;;AAED,gBAAIwB,SAASG,OAAb,EAAsB;AAClBZ,sCAAsBS,QAAtB;AACH;;AAED;AACA,kBAAMR,YAAYQ,SAASG,OAAT,GACZH,SAASG,OADG,GAEZH,QAFN;;AAIA,mBAAO,CAAC,GAAGN,GAAJ,EAASF,SAAT,CAAP;AACH,SA7Ce,EA6Cb,EA7Ca,EA6CTY,IA7CS,CA6CJ,GA7CI,CAAhB;;AA+CA,YAAIpB,IAAJ,EAAU;AACNQ,yBAAc,cAAaR,IAAK,IAAhC;AACH;;AAEDQ,oBAAYpB,mBAAmBoB,SAAnB,CAAZ;;AAEA,eAAON,eACN;AACIM,qBADJ;AAEIF;AAFJ,SADM,GAKJE,SALH;AAMH,KAxEM;;AA0EA,UAAMa,wCAAgB,CAACtB,QAAD,EAAW,EAAEC,IAAF,EAAQC,QAAR,KAAqB,EAAhC,KAAuC;AAChE,cAAM,EAAEO,SAAF,EAAaF,YAAb,KAA8BR,YAAYC,QAAZ,EAAsB,EAAEC,IAAF,EAAQC,QAAR,EAAkBC,cAAc,IAAhC,EAAtB,CAApC;AACA,cAAMV,KAAK8B,GAAGC,GAAH,CAAOf,SAAP,CAAX;;AAEA,YAAGF,YAAH,EAAiB;AACb,gBAAIA,iBAAiB,MAArB,EAA6B;AACzB,uBAAOd,GAAGgC,IAAH,EAAP;AACH,aAFD,MAEO;AACH,uBAAOhC,GAAGiC,EAAH,CAAMnB,eAAe,CAArB,CAAP;AACH;AACJ;;AAED,eAAOd,EAAP;AACH,KAbM;;AAeP;;AAEO,UAAMkC,0BAAUC,SAAD,IAAe;AACjC,YAAIC,SAAJ;AACAN,WAAGO,MAAH,GACKC,IADL,CACUC,OAAO;AACTH,wBAAYG,GAAZ;AACA,mBAAOT,GAAGC,GAAH,CAAO,MAAP,CAAP;AACH,SAJL,EAKKO,IALL,CAKUE,QAAQ;AACV,kBAAM,EAAEC,YAAF,KAAmBD,KAAK,CAAL,CAAzB;AACA,kBAAME,KAAKP,cAAc,KAAd,GACL,CADK,GAELM,eAAe,GAFrB;;AAIAL,sBAAUO,QAAV,CAAmB,CAAnB,EAAsBD,EAAtB;AACH,SAZL;AAaH,KAfM;;AAiBA,UAAME,wBAAQ,CAAC5C,EAAD,EAAK6C,MAAL,EAAarC,IAAb,KACjBqB,cAAc,CAACgB,MAAD,EAAS7C,EAAT,CAAd,EAA4B,EAAEQ,IAAF,EAA5B,EACKsC,KADL,GAEKF,KAFL,EADG;;AAMA,UAAMG,sBAAO,CAACvC,IAAD,EAAOwC,KAAP,EAAcH,MAAd,KAAyB;AACzC,cAAMI,sBAAsB,cAA5B;AACA,cAAMC,iBAAiB1C,KAAKH,KAAL,CAAW4C,mBAAX,CAAvB;;AAEA,YAAIC,cAAJ,EAAoB;AAChB,kBAAMC,eAAeC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,KAA3B,EAAkCC,QAAlC,EAArB;AACA/C,mBAAOA,KAAKV,OAAL,CAAamD,mBAAb,EAAkCE,YAAlC,CAAP;AACA,qCAASD,eAAe,CAAf,CAAT,EAA4BC,YAA5B;AACH;;AAED,cAAMK,qBAAqB,cAA3B;AACA,cAAMC,gBAAgBjD,KAAKH,KAAL,CAAWmD,kBAAX,CAAtB;;AAEA,YAAIC,aAAJ,EAAmB;AACfjD,mBAAOA,KAAKV,OAAL,CAAa0D,kBAAb,EAAiCE,iBAAMD,cAAc,CAAd,CAAN,CAAjC,CAAP;AACH;;AAED5B,sBAAc,CAACgB,MAAD,EAASG,KAAT,CAAd,EAA+BD,IAA/B,CAAoCvC,IAApC;AACH,KAlBM;;AAoBA,UAAMV,4BAAU,CAACkD,KAAD,EAAQH,MAAR,EAAgBc,QAAhB,EAA0BnD,IAA1B,KAAmC;AACtDqB,sBAAc,CAACgB,MAAD,EAASG,KAAT,CAAd,EAA+B,EAAExC,MAAMmD,QAAR,EAA/B,EACKC,KADL,GAEKb,IAFL,CAEUvC,IAFV;AAGH,KAJM;;AAMA,UAAMqD,sBAAOC,UAAU;AAC1B,cAAMC,MAAMC,mBAAQF,MAAR,CAAZ;;AAEA,YAAG,CAACC,GAAJ,EAAS,MAAMrC,MAAO,UAASoC,MAAO,uBAAvB,CAAN;;AAEThC,WAAGmC,KAAH,CAASF,GAAT;AACH,KANM;;AAQA,UAAMG,0CAAiB,MAAM;AAChCpC,WAAGqC,IAAH,CAAQ,IAAR;AACH,KAFM;;AAIP;AACO,UAAMC,gCAAY,CAACC,GAAD,EAAMC,SAAN,EAAiBC,WAAjB,EAA8BC,GAA9B,EAAmCC,SAAnC,EAA8CC,WAA9C,KAA8D;AACnF,cAAMC,OAAQ9C,cAAc,CAACyC,SAAD,EAAYD,GAAZ,CAAd,EAAgC,EAAE7D,MAAM+D,WAAR,EAAhC,CAAd;AACAI,aAAKC,OAAL,CAAa,WAAb,EAA0B,EAAEC,OAAO,CAAT,EAAYC,OAAO,IAAnB,EAA1B;;AAEA,YAAIC,OAAO,CAAX;AACA,YAAIC,OAAO,CAAX;;AAEAnD,sBAAc,CAAC4C,SAAD,EAAYD,GAAZ,CAAd,EAAgC,EAAEhE,MAAMkE,WAAR,EAAhC,EAAuDpC,IAAvD,CAA4D2C,OAAO;AACjE,kBAAM,EAAEC,CAAF,EAAKC,CAAL,KAAWF,IAAI,CAAJ,EAAOG,qBAAP,EAAjB;AACAL,mBAAOG,CAAP;AACAF,mBAAOG,CAAP;;AAEA,mBAAOtD,cAAc,cAAd,CAAP;AACD,SAND,EAMGS,IANH,CAMQ2C,OAAO;AACX,kBAAM,EAAEC,GAAGG,UAAL,EAAiBF,GAAGG,UAApB,KAAmCL,IAAI,CAAJ,EAAOG,qBAAP,EAAzC;;AAEA,kBAAMG,aAAa;AACfL,mBAAG,GADY;AAEfC,mBAAG,GAFY;AAGfL,uBAAO;AAHQ,aAAnB;;AAMAG,gBACKL,OADL,CACa,WADb,EAC0BW,UAD1B,EAEKX,OAFL,CAEa,SAFb,EAEwBW,UAFxB;AAGH,SAlBD;AAmBH,KA1BM;;AA4BA,UAAMC,sCAAeC,QAAQ;AAChC3D,WAAG4D,kBAAH,CAAsBD,IAAtB,EAA4B;AACxBE,uBAAW,IADa;AAExBC,2BAAe;AAFS,SAA5B;AAIH,KALM;;AAOA,UAAMC,0CAAkB,CAAC7F,EAAD,EAAK6C,MAAL,KAAgB;AAC3ChB,sBAAc,CAACgB,MAAD,EAAS7C,EAAT,CAAd,EAA4B0F,kBAA5B,CAA+C1F,EAA/C,EAAmD;AAC/C2F,uBAAW,IADoC;AAE/CC,2BAAe;AAFgC,SAAnD;AAIH,KALM;;AAOA,UAAME,0BAAShC,UAAU;AAC5BhC,WAAGiC,GAAH,GAASgC,MAAT,CAAgB,SAAhB,EAA2B/B,mBAAQF,MAAR,CAA3B;AACH,KAFM;;AAIA,UAAMkC,sCAAeF,MAArB;;AAEA,UAAMG,gCAAY,CAACC,MAAD,EAASlG,EAAT,EAAa6C,MAAb,EAAqBrC,IAArB,KAA8B;AACnDqB,sBAAc,CAACgB,MAAD,EAAS7C,EAAT,CAAd,EAA4B,EAAES,UAAU,IAAZ,EAAkBD,IAAlB,EAA5B,EACKuF,MADL,CACY,aADZ,EAC2BG,MAD3B;AAEH,KAHM;;AAKA,UAAMC,8BAAW,CAACnG,EAAD,EAAK6C,MAAL,EAAa,EAAErC,IAAF,KAAW,EAAxB,KACpBqB,cAAc,CAACgB,MAAD,EAAS7C,EAAT,CAAd,EAA4B,EAAEQ,IAAF,EAA5B,EAAsCsC,KAAtC,GAA8CiD,MAA9C,CAAqD,OAArD,CADG;;AAIA,UAAMK,8BAAW,CAAC5F,IAAD,EAAOR,EAAP,EAAW6C,MAAX,KAAsBsD,SAASnG,EAAT,EAAa6C,MAAb,EAAqB,EAAErC,IAAF,EAArB,CAAvC;;AAEA,UAAM6F,0CAAkB,CAACrG,EAAD,EAAK6C,MAAL,EAAarC,IAAb,KAAsB;AACjDqB,sBAAc,CAACgB,MAAD,EAAS7C,EAAT,CAAd,EAA4B,EAAEQ,IAAF,EAAQC,UAAU,IAAlB,EAA5B,EACKsF,MADL,CACY,aADZ,EAC2B,CAD3B;AAEH,KAHM;;AAKA,UAAMO,sCAAe,CAACC,UAAD,EAAavG,EAAb,EAAiB6C,MAAjB,KAA4B;AACpDhB,sBAAc,CAACgB,MAAD,EAAS7C,EAAT,CAAd,EAA4B+F,MAA5B,CAAmC,UAAnC,EAA+C,kBAA/C,EAAmE1G,WAAWkH,UAAX,CAAnE;AACH,KAFM;;AAIA,UAAMC,8BAAW,CAACD,UAAD,EAAavG,EAAb,EAAiB6C,MAAjB,KAA4B;AAChDhB,sBAAc,CAACgB,MAAD,EAAS7C,EAAT,CAAd,EAA4B+F,MAA5B,CAAmC,UAAnC,EAA+C,cAA/C,EAA+D1G,WAAWkH,UAAX,CAA/D;AACH,KAFM","file":"functions.js","sourcesContent":["import hex2rgb from 'hex-rgb';\nimport wordsToNumbers from 'words-to-numbers';\nimport pluralize from 'pluralize';\n\nimport {\n    SCREENS,\n    STATE,\n    setState,\n    ELEMENT_SELECTORS,\n} from './variables';\n\n// COMMON FUNCTIONS\n\nexport const hex2rgbCSS = (hex) => {\n    const { red, green, blue, alpha } = hex2rgb(hex);\n\n    return `rgb(${red}, ${green}, ${blue}${alpha < 255 ? `, ${parseInt(alpha * 100) / 100}` : ''})`;\n}\n\n// Builds class selectors for our react Styled Component classes (ie. accounts for the `-randomString`). You should just be able to type classes as usual\nexport const buildClassSelector = selectors => (\n    selectors.replace(/\\.([^.[:\\s]+)/g, '[class*=\"$1\"]')\n);\n\n// ex: Third Button => [ Button, 3 ]\nexport const parseNumberEls = el => {\n    if(el.includes('last')) {\n        return {\n            ordinal: 'last',\n            el: el.replace('last ', '')\n        }\n    } else {\n        const parsed = wordsToNumbers(el);\n        const numbers = parsed.match(/\\d+/);\n        \n        if(numbers) {\n            return {\n                el: parsed.replace(numbers[0] + ' ', ''),\n                ordinal: parseInt(numbers[0]),\n            };\n        } else {\n            return {\n                el: parsed,\n            };\n        }\n    }\n}\n\n// pass a single element or chain (parent => child) as an Array\n// to get the selected Cypress element\nexport const getSelector = (elements, { text, singular, showOrdinals } = {}) => {\n    if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    // in case it comes in from a parent optional environemnt\n    elements = elements.filter(el=>el);\n\n    // for now we apply it to the first ordinal we get\n    // ex: third Button in the second Modal will just get the third Button overall\n    let firstOrdinal;\n    let lastParentSelectors;\n    \n    let className = elements.reduce((out, elementStr, i) => {\n        let element;\n        // ex: Button's => Button\n        element = elementStr.replace('\\'s', '');\n        \n        if(singular) {\n            // Buttons => Button\n            element = pluralize.singular(element);\n        }\n\n        const {\n            ordinal, \n            el\n        } = parseNumberEls(element);\n\n        if (!firstOrdinal && ordinal) {\n            firstOrdinal = ordinal;\n        }\n    \n        let selectors = ELEMENT_SELECTORS;\n\n        // for now just supports 1 level of nest\n        if (out[i - 1]) {            \n            selectors = lastParentSelectors;\n        }\n\n        const selector = selectors[el];\n\n        if (!selector) {\n            const lastParent = elements[i - 1]\n                ? elements[i - 1] + '>'\n                : '';\n            throw new Error(`The className was not defined for ${lastParent}${el}`);\n        }\n\n        if (selector.default) {\n            lastParentSelectors = selector;\n        }\n\n        // if it's a container\n        const className = selector.default\n            ? selector.default\n            : selector;\n    \n        return [...out, className];\n    }, []).join(' ');\n\n    if (text) {\n        className += `:contains(\"${text}\")`;\n    }\n\n    className = buildClassSelector(className);\n\n    return showOrdinals ?\n     {\n         className,\n         firstOrdinal\n     }\n     : className;\n}\n\nexport const getNormalized = (elements, { text, singular } = {}) => {\n    const { className, firstOrdinal } = getSelector(elements, { text, singular, showOrdinals: true })\n    const el = cy.get(className);\n\n    if(firstOrdinal) {\n        if (firstOrdinal === 'last') {\n            return el.last();\n        } else {\n            return el.eq(firstOrdinal - 1);\n        }\n    }\n    \n    return el;\n}\n\n// MORE SPECIALIZED FUNCTIONs (catching Regex)\n\nexport const scroll = (direction) => {\n    let windowObj;\n    cy.window()\n        .then(win => {\n            windowObj = win;\n            return cy.get('body');\n        })\n        .then(body => {\n            const { scrollHeight } = body[0];\n            const px = direction === 'top'\n                ? 0\n                : scrollHeight + 100;\n\n            windowObj.scrollTo(0, px);\n        });\n}\n\nexport const click = (el, parent, text) => (\n    getNormalized([parent, el], { text })\n        .first()\n        .click()\n);\n\nexport const type = (text, input, parent) => {\n    const randomVariableRegex = /<rand:(\\w+)>/;\n    const randomVariable = text.match(randomVariableRegex);\n    \n    if (randomVariable) {\n        const randomNumber = Math.round(Math.random() * 10000).toString();\n        text = text.replace(randomVariableRegex, randomNumber);\n        setState(randomVariable[1], randomNumber);\n    }\n\n    const stateVariableRegex = /<var:(\\w+) >/;\n    const stateVariable = text.match(stateVariableRegex);\n\n    if (stateVariable) {\n        text = text.replace(stateVariableRegex, STATE[stateVariable[1]]);\n    }\n\n    getNormalized([parent, input]).type(text);\n}\n\nexport const replace = (input, parent, contains, text) => {\n    getNormalized([parent, input], { text: contains })\n        .clear()  \n        .type(text);\n}\n\nexport const open = screen => {\n    const url = SCREENS[screen];\n    \n    if(!url) throw Error(`Screen ${screen} has no specified URL`);\n    \n    cy.visit(url); \n}\n\nexport const waitForResults = () => {\n    cy.wait(1000);\n}\n\n// Experimental, not nailed down yet\nexport const dragAbove = (el1, el1Parent, el1Contains, el2, el2Parent, el2Contains) => {\n    const $el1 =  getNormalized([el1Parent, el1], { text: el1Contains });\n    $el1.trigger('mousedown', { which: 1, force: true });\n\n    let el2X = 0;\n    let el2Y = 0;\n    \n    getNormalized([el2Parent, el2], { text: el2Contains }).then($el => {\n      const { x, y } = $el[0].getBoundingClientRect();\n      el2X = x;\n      el2Y = y;\n\n      return getNormalized('Ranking Form');\n    }).then($el => {\n        const { x: containerX, y: containerY } = $el[0].getBoundingClientRect();\n\n        const newPosOpts = {\n            x: 400,\n            y: 100,\n            force: true\n        };\n\n        $el \n            .trigger('mousemove', newPosOpts)\n            .trigger('mouseup', newPosOpts);\n    });\n}\n\nexport const takeSnapshot = name => {\n    cy.matchImageSnapshot(name, {\n        threshold: 1000,\n        thresholdType: 'pixel'\n    });\n}\n\nexport const takeElSnapshot =  (el, parent) => {\n    getNormalized([parent, el]).matchImageSnapshot(el, {\n        threshold: 1000,\n        thresholdType: 'pixel'\n    });\n}\n\nexport const onPage = screen => {\n    cy.url().should('contain', SCREENS[screen]);\n}\n\nexport const redirectedTo = onPage;\n\nexport const nElements = (number, el, parent, text) => {\n    getNormalized([parent, el], { singular: true, text })\n        .should('have.length', number);\n};\n\nexport const elExists = (el, parent, { text } = {}) => (\n    getNormalized([parent, el], { text }).first().should('exist')\n);\n\nexport const textOnEl = (text, el, parent) => elExists(el, parent, { text });\n\nexport const elDoesNotExist =  (el, parent, text) => {\n    getNormalized([parent, el], { text, singular: true })\n        .should('have.length', 0);\n}\n\nexport const elBackground = (background, el, parent) => {\n    getNormalized([parent, el]).should('have.css', 'background-color', hex2rgbCSS(background))\n};\n\nexport const elBorder = (background, el, parent) => {\n    getNormalized([parent, el]).should('have.css', 'border-color', hex2rgbCSS(background))\n}"]}