{"version":3,"sources":["../../lib/__tests__/phrases.spec.js"],"names":["describe","it","expect","match","REGEX","SCROLL","toBe","toBeNull","CLICK","m","TYPE","REPLACE","OPEN","WAIT_FOR_RESULTS","toBeTruthy","WAIT_SECONDS","DRAG_ABOVE","toBeUndefined","TAKE_SNAPSHOT","TAKE_EL_SNAPSHOT","ON_PAGE","REDIRECTED_TO","N_ELEMENTS","TEXT_ON_EL","EL_EXISTS","EL_DOES_NOT_EXIST","EL_CONTAINS_TEXT","EL_VALUE","EL_BACKBGROUND","EL_BORDER"],"mappings":"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","file":"phrases.spec.js","sourcesContent":["import { REGEX } from '../phrases';\n\ndescribe('REGEX', () => {\n    describe('SCROLL', () => {\n        it('I scroll to the top of the page', () => {\n            expect(\n                'I scroll to the top of the page'\n                .match(REGEX.SCROLL)[1]\n            ).toBe('top');\n        });\n\n        it('I scroll to the bottom of the page', () => {\n            expect(\n                'I scroll to the bottom of the page'\n                .match(REGEX.SCROLL)[1]\n            ).toBe('bottom')\n        });\n\n        it('I scroll to the side of the page', () => {\n            expect(\n                'I scroll to the side of the page'\n                .match(REGEX.SCROLL)\n            ).toBeNull()\n        });\n    });\n\n    describe('CLICK', () => {\n        it('I click on the \"Save Button', () => {\n            expect(\n                'I click on the \"Save Button\"'\n                .match(REGEX.CLICK)[1]\n            ).toBe('Save Button')\n        });\n\n        it('I click on a \"Button\"', () => {\n            expect(\n                'I click on a \"Button\"'\n                .match(REGEX.CLICK)[1]\n            ).toBe('Button')\n        });\n\n        it('I click on a \"Button\" inside a \"Modal\"', () => {\n            const m = 'I click on a \"Button\" inside a \"Modal\"'\n                .match(REGEX.CLICK);\n            \n            expect(m[1]).toBe('Button');\n            expect(m[2]).toBe('Modal');\n        });\n\n        it('I click on a \"Button\" inside a \"Modal\" contaning \"Text\"', () => {\n            const m = 'I click on a \"Button\" inside a \"Modal\" containing \"Text\"'\n                .match(REGEX.CLICK);\n            \n            expect(m[1]).toBe('Button');\n            expect(m[2]).toBe('Modal');\n            expect(m[3]).toBe('Text');\n        });\n    });\n\n    describe('TYPE', () => {\n        it('I type \"toli\" into the \"Username Input\"', () => {\n            const m ='I type \"toli\" into the \"Username Input\"'\n                .match(REGEX.TYPE);\n            \n            expect(m[1]).toBe('toli');\n            expect(m[2]).toBe('Username Input');\n        });\n\n        it('I type \"toli\" in the \"Username Input', () => {\n            const m ='I type \"toli\" in the \"Username Input\"'\n                .match(REGEX.TYPE);\n            \n            expect(m[1]).toBe('toli');\n            expect(m[2]).toBe('Username Input');\n        });\n\n        it('I type \"toli\" in the \"Username Input\" inside the \"Signup Modal\"', () => {\n            const m = 'I type \"toli\" in the \"Username Input\" inside the \"Signup Modal\"'\n                .match(REGEX.TYPE);\n            \n            expect(m[1]).toBe('toli');\n            expect(m[2]).toBe('Username Input');\n            expect(m[3]).toBe('Signup Modal');\n        });\n\n        it('I type \"toli\" in the \"Username Input\" inside the \"Signup Modal\" containing \"randy\"', () => {\n            const m = 'I type \"toli\" in the \"Username Input\" inside the \"Signup Modal\" containing \"randy\"'\n                .match(REGEX.TYPE);\n            \n            expect(m[1]).toBe('toli');\n            expect(m[2]).toBe('Username Input');\n            expect(m[3]).toBe('Signup Modal');\n            expect(m[4]).toBe('randy');\n        });\n    });\n\n    describe('REPLACE', () => {\n        it('I replace the contents of the \"Username Input\" with \"toli\"', () => {\n            const m ='I replace the contents of the \"Username Input\" with \"toli\"'\n                .match(REGEX.REPLACE);\n            \n            expect(m[1]).toBe('Username Input');\n            expect(m[4]).toBe('toli');\n        });\n\n        it('I replace the contents of \"Username Input\" with \"toli\"', () => {\n            const m ='I replace the contents of \"Username Input\" with \"toli\"'\n                .match(REGEX.REPLACE);\n            \n            expect(m[1]).toBe('Username Input');\n            expect(m[4]).toBe('toli');\n        });\n\n        it('I replace the contents of the \"Username Input\" inside the \"Signup Modal\" with \"toli\"', () => {\n            const m ='I replace the contents of the \"Username Input\" inside the \"Signup Modal\" with \"toli\"'\n                .match(REGEX.REPLACE);\n            \n            expect(m[1]).toBe('Username Input');\n            expect(m[2]).toBe('Signup Modal');\n            expect(m[4]).toBe('toli');\n        });\n\n        it('I replace the contents of the \"Username Input\" inside the \"Signup Modal\" containing \"randy\" with \"toli\"', () => {\n            const m ='I replace the contents of the \"Username Input\" inside the \"Signup Modal\" containing \"randy\" with \"toli\"'\n                .match(REGEX.REPLACE);\n            \n            expect(m[1]).toBe('Username Input');\n            expect(m[2]).toBe('Signup Modal');\n            expect(m[3]).toBe('randy');\n            expect(m[4]).toBe('toli');\n        });\n    });\n\n    describe('OPEN', () => {\n        it('I open the \"Signup Page\"', () => {\n            const m = 'I open the \"Signup Page\"'\n                .match(REGEX.OPEN);\n            \n            expect(m[1]).toBe('Signup Page');\n        });\n\n        it('I open \"Home\"', () => {\n            const m = 'I open \"Home\"'\n                .match(REGEX.OPEN);\n            \n            expect(m[1]).toBe('Home');\n        });\n\n        it('I open \"Home\" page', () => {\n            const m = 'I open \"Home\" page'\n                .match(REGEX.OPEN);\n            \n            expect(m[1]).toBe('Home');\n        });\n    });\n\n    describe('WAIT_FOR_RESULTS', () => {\n        it('I wait for results to load', () => {\n            const m = 'I wait for results to load'\n                .match(REGEX.WAIT_FOR_RESULTS);\n            \n            expect(m[0]).toBeTruthy();\n        });\n\n        it('I wait for results to load and stuff', () => {\n            const m = 'I wait for results to load and stuff'\n                .match(REGEX.WAIT_FOR_RESULTS);\n            \n            expect(m).toBeNull();\n        });\n    });\n\n    describe('WAIT_SECONDS', () => {\n        it('I wait 10 seconds', () => {\n            const m = 'I wait 10 seconds'\n                .match(REGEX.WAIT_SECONDS);\n            \n            expect(m[1]).toBe('10');\n        });\n\n        it('I wait ten seconds', () => {\n            const m = 'I wait ten seconds'\n                .match(REGEX.WAIT_SECONDS);\n            \n            expect(m).toBeNull();\n        });\n    });\n\n    describe('DRAG_ABOVE', () => {\n        it('I drag the \"Button\" above the \"Trash Can\"', () => {\n            const m = 'I drag the \"Button\" above the \"Trash Can\"'\n                .match(REGEX.DRAG_ABOVE);\n            \n            expect(m[1]).toBe('Button');\n            expect(m[4]).toBe('Trash Can');\n        });\n\n        it('I drag the \"Button\" inside the \"Modal\" above the \"Trash Can\"', () => {\n            const m = 'I drag the \"Button\" inside the \"Modal\" above the \"Trash Can\"'\n                .match(REGEX.DRAG_ABOVE);\n            \n            expect(m[1]).toBe('Button');\n            expect(m[2]).toBe('Modal');\n            expect(m[4]).toBe('Trash Can');\n        });\n\n        it('I drag the \"Button\" inside the \"Modal\" above the \"Trash Can\" inside the \"Sidebar\" containting \"Trash Cans\"', () => {\n            const m = 'I drag the \"Button\" inside the \"Modal\" above the \"Trash Can\" inside the \"Sidebar\" containing \"Trash Cans\"'\n                .match(REGEX.DRAG_ABOVE);\n            \n            expect(m[1]).toBe('Button');\n            expect(m[2]).toBe('Modal');\n            expect(m[3]).toBeUndefined();\n            expect(m[4]).toBe('Trash Can');\n            expect(m[5]).toBe('Sidebar');\n            expect(m[6]).toBe('Trash Cans');\n        });\n    });\n\n    describe('TAKE_SNAPSHOT', () => {\n        it('I take a snapshot named \"Home Page\"', () => {\n            const m = 'I take a snapshot named \"Home Page\"'\n                .match(REGEX.TAKE_SNAPSHOT);\n            \n            expect(m[1]).toBe('Home Page');\n        });\n    });\n\n    describe('TAKE_EL_SNAPSHOT', () => {\n        it('I take a snapshot of the \"Modal\"', () => {\n            const m = 'I take a snapshot of the \"Modal\"'\n                .match(REGEX.TAKE_EL_SNAPSHOT);\n            \n            expect(m[1]).toBe('Modal');\n        });\n    });\n\n    describe('ON_PAGE', () => {\n        it('I should be on the \"Front Page\"', () => {\n            const m = 'I should be on the \"Front Page\"'\n                .match(REGEX.ON_PAGE);\n            \n            expect(m[1]).toBe('Front Page');\n        });\n    });\n\n    describe('REDIRECTED_TO', () => {\n        it('I should be redirected to the \"Front Page\"', () => {\n            const m = 'I should be redirected to the \"Front Page\"'\n                .match(REGEX.REDIRECTED_TO);\n            \n            expect(m[1]).toBe('Front Page');\n        });\n    });\n\n    describe('N_ELEMENTS', () => {\n        it('I should see 3 \"Buttons\"', () => {\n            const m = 'I should see 3 \"Buttons\"'\n                .match(REGEX.N_ELEMENTS);\n            \n            expect(m[1]).toBe('3');\n            expect(m[2]).toBe('Buttons');\n        });\n\n        it('I should see 3 \"Buttons\" containing \"Submit\"', () => {\n            const m = 'I should see 3 \"Buttons\" containing \"Submit\"'\n                .match(REGEX.N_ELEMENTS);\n            \n            expect(m[1]).toBe('3');\n            expect(m[2]).toBe('Buttons');\n            expect(m[4]).toBe('Submit');\n        });\n    });\n\n    describe('TEXT_ON_EL', () => {\n        it('I should see \"Hello World\" on the \"Submit Button\"', () => {\n            const m = 'I should see \"Hello World\" on the \"Submit Button\"'\n                .match(REGEX.TEXT_ON_EL);\n            \n            expect(m[1]).toBe('Hello World');\n            expect(m[2]).toBe('Submit Button');\n        });\n    });\n\n    describe('EL_EXISTS', () => {\n        it('I should see a \"Submit Button\"', () => {\n            const m = 'I should see a \"Submit Button\"'\n                .match(REGEX.EL_EXISTS);\n            \n            expect(m[1]).toBe('Submit Button')\n        });\n\n        it('I should see a \"Submit Button\" in the \"Footer\"', () => {\n            const m = 'I should see a \"Submit Button\" in the \"Footer\"'\n                .match(REGEX.EL_EXISTS);\n            \n            expect(m[1]).toBe('Submit Button')\n            expect(m[2]).toBe('Footer')\n        });\n\n\n        it('I should see a \"Submit Button\" in the \"Footer\" containing \"Submit\"', () => {\n            const m = 'I should see a \"Submit Button\" in the \"Footer\" containing \"Submit\"'\n                .match(REGEX.EL_EXISTS);\n            \n            expect(m[1]).toBe('Submit Button')\n            expect(m[2]).toBe('Footer')\n            expect(m[3]).toBe('Submit')\n        });\n    });\n\n    describe('EL_DOES_NOT_EXIST', () => {\n        it('I should not see a \"Submit Button\"', () => {\n            const m = 'I should not see a \"Submit Button\"'\n                .match(REGEX.EL_DOES_NOT_EXIST);\n            \n            expect(m[1]).toBe('Submit Button')\n        });\n\n        it('I should not see a \"Submit Button\" in the \"Footer\"', () => {\n            const m = 'I should not see a \"Submit Button\" in the \"Footer\"'\n                .match(REGEX.EL_DOES_NOT_EXIST);\n            \n            expect(m[1]).toBe('Submit Button')\n            expect(m[2]).toBe('Footer')\n        });\n\n\n        it('I should not see a \"Submit Button\" in the \"Footer\" containing \"Submit\"', () => {\n            const m = 'I should not see a \"Submit Button\" in the \"Footer\" containing \"Submit\"'\n                .match(REGEX.EL_DOES_NOT_EXIST);\n            \n            expect(m[1]).toBe('Submit Button')\n            expect(m[2]).toBe('Footer')\n            expect(m[3]).toBe('Submit')\n        });\n    });\n\n    describe('EL_CONTAINS_TEXT', () => {\n        it('The \"Submit Button\" should contain \"hello\"', () => {\n            const m = 'The \"Submit Button\" should contain \"hello\"'\n                .match(REGEX.EL_CONTAINS_TEXT);\n            \n            expect(m[1]).toBe('Submit Button')\n            expect(m[4]).toBe('hello')\n        });\n\n        it('\"Username\" should be \"toli\"', () => {\n            const m = '\"Username\" should be \"toli\"'\n                .match(REGEX.EL_CONTAINS_TEXT);\n            \n            expect(m[1]).toBe('Username')\n            expect(m[4]).toBe('toli')\n        });\n\n        it('The \"Submit Button\" in the \"Footer\" should contain \"Submit\"', () => {\n            const m = 'The \"Submit Button\" in the \"Footer\" should contain \"Submit\"'\n                .match(REGEX.EL_CONTAINS_TEXT);\n            \n            expect(m[1]).toBe('Submit Button')\n            expect(m[2]).toBe('Footer')\n            expect(m[4]).toBe('Submit');\n        });\n    });\n\n    describe('EL_VALUE', () => {\n        it('The \"Submit Button\\'s\" value should be \"hello\"', () => {\n            const m = 'The \"Submit Button\\'s\" value should be \"hello\"'\n                .match(REGEX.EL_VALUE);\n            \n            expect(m[1]).toBe('Submit Button\\'s');\n            expect(m[4]).toBe('hello');\n        });\n\n        it('\"Username\\'s\" value should be \"toli\"', () => {\n            const m = '\"Username\\'s\" value should be \"toli\"'\n                .match(REGEX.EL_VALUE);\n            \n            expect(m[1]).toBe('Username\\'s');\n            expect(m[4]).toBe('toli');\n        });\n\n        it('\"Username\" in the \"Footer\\'s\" value should be \"toli\"', () => {\n            const m = '\"Username\" in the \"Footer\\'s\" value should be \"toli\"'\n                .match(REGEX.EL_VALUE);\n            \n            expect(m[1]).toBe('Username');\n            expect(m[2]).toBe('Footer\\'s');\n            expect(m[4]).toBe('toli');\n        });\n    });\n\n    describe('EL_BACKBGROUND', () => {\n        it('I should see a \"#ffffff\" background on the \"Button\"', () => {\n            const m = 'I should see a \"#ffffff\" background on the \"Button\"'\n                .match(REGEX.EL_BACKBGROUND);\n            \n            expect(m[1]).toBe('#ffffff');\n            expect(m[2]).toBe('Button');\n        });\n\n        it('I should see a \"#ffffff\" background on the \"Button\" in the \"Modal\"', () => {\n            const m = 'I should see a \"#ffffff\" background on the \"Button\" in the \"Modal\"'\n                .match(REGEX.EL_BACKBGROUND);\n            \n            expect(m[1]).toBe('#ffffff');\n            expect(m[2]).toBe('Button');\n            expect(m[3]).toBe('Modal');\n        });\n    });\n\n    describe('EL_BORDER', () => {\n        it('I should see a \"#ffffff\" border on the \"Button\"', () => {\n            const m = 'I should see a \"#ffffff\" border on the \"Button\"'\n                .match(REGEX.EL_BORDER);\n            \n            expect(m[1]).toBe('#ffffff');\n            expect(m[2]).toBe('Button');\n        });\n\n        it('I should see a \"#ffffff\" border on the \"Button\" in the \"Modal\"', () => {\n            const m = 'I should see a \"#ffffff\" border on the \"Button\" in the \"Modal\"'\n                .match(REGEX.EL_BORDER);\n            \n            expect(m[1]).toBe('#ffffff');\n            expect(m[2]).toBe('Button');\n            expect(m[3]).toBe('Modal');\n        });\n    });\n});"]}