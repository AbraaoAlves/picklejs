{"version":3,"sources":["../lib/regexBuilder.js"],"names":["r","str","RegExp","or","arr","capture","required","join","string","int","elInEl","verbs","page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,UAAMA,gBAAIC,OAAO,IAAIC,MAAJ,CAAY,IAAGD,GAAI,GAAnB,EAAuB,GAAvB,CAAjB;;AAEA,UAAME,kBAAK,CAACC,GAAD,EAAM,EAAEC,OAAF,EAAWC,QAAX,KAAwB,EAA9B,KAAqC,IACnDD,UAAU,EAAV,GAAe,IAAK,GACpBD,IAAIG,IAAJ,CAAS,GAAT,CAAc,IACdD,WAAW,EAAX,GAAgB,GAAI,EAHjB;;AAKA,UAAME,0BAAS,WAAf;AACA,UAAMC,oBAAM,QAAZ;;AAEA,UAAMC,0BAAU,OAAMP,GAAGQ,eAAH,CAAU,OAAMH,MAAO,UAASL,GAAGQ,eAAH,CAAU,IAAGH,MAAO,oBAAmBA,MAAO,IAApG;AACA,UAAMI,sBAAQ,aAAYJ,MAAO,qCAAjC","file":"regexBuilder.js","sourcesContent":["import verbs from './verbs';\n\nexport const r = str => new RegExp(`^${str}$`, 'i');\n\nexport const or = (arr, { capture, required } = {}) =>`(${\n    capture ? '' : '?:'}${\n    arr.join('|')})${\n    required ? '' : '?'}`;\n\nexport const string = '\"([^\"]+)\"';\nexport const int = '(\\\\d+)';\n\nexport const elInEl = `\\\\s?${or(verbs)}\\\\s?${string}(?:\\\\s?${or(verbs)} ${string})?(?: containing ${string})?`;\nexport const page = `(?: the)? ${string}(?:\\\\s(?:page|screen|Page|Screen))?`"]}